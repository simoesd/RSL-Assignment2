TIMETABLE
	
scheme TIMETABLETEST = 
  extend TIMETABLE with 
  class 
    value 
      t1 : TramId = "t1",
      t2 : TramId = "t2",
      t3 : TramId = "t3",
      s1 : StopId = "s1",
      s2 : StopId = "s2",

      stopA : Stop = mk_Stop("A", 2, 1),
      stopB : Stop = mk_Stop("B", 3, 2),
      stopC : Stop = mk_Stop("C", 2, 1),
      stopD : Stop = mk_Stop("D", 2, 1),
      stopE : Stop = mk_Stop("E", 3, 1),
      connectionAB : Connection = mk_Connection("A", "B", 1, 10),
      connectionBC : Connection = mk_Connection("B", "C", 2, 12),
      connectionBD : Connection = mk_Connection("B", "D", 3, 7),
      net : Net = ({stopA, stopB, stopC, stopD}, {connectionAB,
      connectionBC, connectionBD}),

      ttNoWaitingTime : TimeTable = addStop(t1, "B", 0, 1, addTram(t1,
      empty)),
      ttTooManyTramsAtStop : TimeTable = addStop(t3, "A", 0, 60,
      addStop(t2, "A", 0, 60, addStop(t1, "A", 0, 60, addTram(t3,
      addTram(t2, addTram(t1, empty)))))),
      ttTooManyTramsAtConnection : TimeTable = addStop(t1, "B", 59,
      60, addStop(t1, "A", 0, 1, addStop(t2, "B", 59,
      60, addStop(t2, "A", 0, 1, addTram(t2, addTram(t1, empty)))))),
      ttOverlappingDirections : TimeTable = addStop(t1, "B", 59,
      60, addStop(t1, "C", 0, 1, addStop(t2, "C", 59,
      60, addStop(t2, "B", 0, 1, addTram(t2, addTram(t1, empty)))))),
      ttSkippingStop : TimeTable = addStop(t1, "C", 30, 60,
      addStop(t1, "A", 0, 10, addTram(t1, empty))),
       ttNoDrivingTime : TimeTable = addStop(t1, "B", 2, 60,
       addStop(t1, "A", 0, 1, addTram(t1, empty))),

       assignmentTimeTableTram1 : TimeTable = addStop(t1, "A", 59, 60,
       addStop(t1, "B", 46, 48,
       addStop(t1, "C", 28, 32,
       addStop(t1, "B", 12, 14,
       addStop(t1, "A", 0, 1, addTram(t1, empty)))))),

       assignmentTimeTable : TimeTable = addStop(t2, "D", 58, 60, addStop(t2, "B", 47, 50, addStop(t2, "A", 28, 32, addStop(t2, "B", 10, 13, addStop(t2, "D", 0, 2, addTram(t2, assignmentTimeTableTram1))))))
    	 
    test_case

      /* constructors */
      [tt001] addTram(t1, empty) = [t1 +> emptyPlan],

      [tt002] addStop(t1, s1, 0, 2, addTram(t1, empty)) = [t1 +>
      <.mk_Entry(s1, 0, 2).>],

      [tt003] addStop(t2, s1, 0, 2, addTram(t1, empty)),

      /* observers */
      [tt101] isIn(t1, addTram(t1, empty)) = true,
      [tt102] isIn(t2, addTram(t1, empty)) = false,

      [tt103] isIn(s1, hd(rng(addStop(t1, s1, 0, 2, addTram(t1, empty))))) =
      true,
      [tt104] isIn(s2, addStop(t1, s1, 0, 2, addTram(t1, empty))) =
      false,

      /* isWellformed */
      [tt201] isWellformed(addStop(t1, "E", 0, 2, addTram(t1,
      empty)), net) = false,

      [tt202] isWellformed(ttNoWaitingTime, net) = false,

      [tt203] isWellformed(ttTooManyTramsAtStop, net) = false,

      [tt204] isWellformed(ttTooManyTramsAtConnection, net) = false,

      [tt205] isWellformed(ttOverlappingDirections, net) = false,

      [tt206] isWellformed(ttSkippingStop, net) = false,

      [tt207] isWellformed(ttNoDrivingTime, net) = false,

      [tt208] isWellformed(assignmentTimeTable, net) = true,

      [tt209] noEntryInPlan(assignmentTimeTable, net) = true,
      [tt210] correctTimingAtStop(assignmentTimeTable, net) = true,
      [tt211] capacityAtStop(assignmentTimeTable, net) = true,
      [tt212] capacityAtConnection(assignmentTimeTable, net) = true, 
      [tt213] overlappingDirection(assignmentTimeTable, net) = false,
      [tt214] noSkipStop(assignmentTimeTable, net) = true,
      [tt215] correctDrivingTime(assignmentTimeTable, net) = true

end
